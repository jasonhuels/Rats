  
@{
  Layout = "_Layout";
}

@using Ratstaurant.Models;
@using System.Linq;
@model Ratstaurant.Models.Restaurant

<h2>Animal Details</h2>
<hr/>
<h3>@Html.DisplayNameFor(model => model.Name): @Html.DisplayFor(model => model.Name)</h3>
<h3>@Html.DisplayNameFor(model => model.Address): @Html.DisplayFor(model => model.Address)</h3>
<h3>@Html.DisplayNameFor(model => model.Rat): @Html.DisplayFor(model => model.Rat)</h3>
<h3>@Html.DisplayNameFor(model => model.Price): @Html.DisplayFor(model => model.Price)</h3>

<pre id="rat-king">                                  
                          
                _           *           __
              /   \       qoOop     /      \
             '      \     (===)    /          \
            |       |Oo   """""  o|            |
            `    \  |OOOo......oOO|   /        |
             `    \\OOOOOOOOOOOOOOO\//        /
               \ _o\OOOOOOOOOOOOOOOO//. ___ /
           ______OOOOOOOOOOOOOOOOOOOOOOOo.___
            --- OO'* `OOOOOOOOOO'*  `OOOOO--
                OO.   OOOOOOOOO'    .OOOOO o
                `OOOooOOOOOOOOOooooOOOOOO'OOOo
              .OO "OOOOOOOOOOOOOOOOOOOO"OOOOOOOo
          __ OOOOOO`OOOOOOOOOOOOOOOO"OOOOOOOOOOOOo
         ___OOOOOOOO_"OOOOOOOOOOO"_OOOOOOOOOOOOOOOO
           OOOOO^OOOO0`(____)/"OOOOOOOOOOOOO^OOOOOO
           OOOOO OO000/000000\000000OOOOOOOO OOOOOO
           OOOOO O0000000000000000 ppppoooooOOOOOO
           `OOOOO 0000000000000000 QQQQ "OOOOOOO"
            o"OOOO 000000000000000oooooOOoooooooO'
            OOo"OOOO.00000000000000000000OOOOOOOO'
           OOOOOO QQQQ 00000EAT00000000000OOOOOOO
          OOOOOO00eeee000000MORE0000000000OOOOOOOO.
         OOOOOOOO00000000000RATS000000000OOOOOOOOOO
         OOOOOOOOO00000000000000000000000OOOOOOOOOO
         `OOOOOOOOO000000000000000000000OOOOOOOOOOO
           "OOOOOOOO0000000000000000000OOOOOOOOOOO'
             "OOOOOOO00000000000000000OOOOOOOOOO"
  .ooooOOOOOOOo"OOOOOOO000000000000OOOOOOOOOOO"
.OOO"""""""""".oOOOOOOOOOOOOOOOOOOOOOOOOOOOOo
OOO         QQQQO"'                     `"QQQQ
OOO
`OOo.
  `"OOOOOOOOOOOOoooooooo.</pre>

<!-- Trigger/Open The Modal -->
<button id="myBtn">Rat a Review</button>

<!-- The Modal -->
<div id="myModal" class="modal">


  <!-- Modal content -->
  <div class="modal-content">
    <span class="close">&times;</span>
    <form action="/restaurants/Details" method="post">
      <input id="RestaurantID" name="RestaurantID" type="hidden" value="@Model.ID">
      <label for="User">Name:</label>
      <input id="User" name="User" type="text" required>
      <label for="Critique">Critique:</label>
      <input id="Critique" name="Critique" type="text" required>
      <button type="submit">Submit</button>
    </form>
  </div>

</div>

@if (@Model.Reviews.Count == 0)
{
    <h3>No rats!</h3>
} 

@foreach (Review review in @Model.Reviews)
{
    <div class="well">
      <h5>@review.User</h5>
      <p>@review.Critique</p>
    </div>
    
}

<script>
// Get the modal
var modal = document.getElementById("myModal");

// Get the button that opens the modal
var btn = document.getElementById("myBtn");

// Get the <span> element that closes the modal
var span = document.getElementsByClassName("close")[0];

// When the user clicks the button, open the modal 
btn.onclick = function() {
  modal.style.display = "block";
}

// When the user clicks on <span> (x), close the modal
span.onclick = function() {
  modal.style.display = "none";
}

// When the user clicks anywhere outside of the modal, close it
window.onclick = function(event) {
  if (event.target == modal) {
    modal.style.display = "none";
  }
}
</script>
<p>@Html.ActionLink("Back to list", "Index")</p>
<p>@Html.ActionLink("Update restaurant", "Edit", new { id = Model.ID })</p>
<p>@Html.ActionLink("Delete restaurant", "Delete", new { id = Model.ID })</p>